<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="UserMapper">
	
    <cache type="org.mybatis.caches.ehcache.LoggingEhcache"/>  
	
	<!-- 换皮肤-->
	<update id="setSKIN" parameterType="pd" flushCache="false">
		update sys_user set
		SKIN = #{SKIN} 
		where USERNAME = #{USERNAME}
	</update>
	
	<!-- 更新登录时间 -->
	<update id="updateLastLogin" parameterType="pd" flushCache="false">
		update sys_user set
		LAST_LOGIN = #{LAST_LOGIN} 
		where USER_ID = #{USER_ID}
	</update>
	
	<!-- 判断用户名和密码 -->
	<select id="getUserInfo" parameterType="pd" resultType="pd" useCache="false"><!-- insert update delete (flushCache="true/false") -->
		select * from sys_user
		where 1=1
		<if test="USERNAME != null and PASSWORD != null">
	  	and	(
	  		USERNAME = #{USERNAME} and PASSWORD = #{PASSWORD}
	  		)
		</if>
		<if test="USER_ID != null and USER_ID != ''">
		and USER_ID = #{USER_ID}
		</if>
	</select>
	

	
	<!-- 存入IP -->
	<update id="saveIP" parameterType="pd" flushCache="false">
		update sys_user
			set 
				IP = #{IP}
			where 
				USERNAME = #{USERNAME}
	</update>
	
	<!-- 修改 -->
	<update id="editU" parameterType="pd" flushCache="false">
		update  sys_user
			set USERNAME				= #{USERNAME},
				NAME 					= #{NAME},
				BZ						= #{BZ},
				EMAIL					= #{EMAIL},
				SNUMBER					= #{SNUMBER},
				PHONE					= #{PHONE}
			<if test="PASSWORD != null and PASSWORD != ''">
				,PASSWORD				= #{PASSWORD}
			</if>
			where 
				USER_ID = #{USER_ID}
	</update>
	
	<!-- 通过user_id获取数据 -->
	<select id="findByUiId" parameterType="pd" resultType="pd" useCache="false">
		select 
			USER_ID,
			USERNAME,
			PASSWORD,
			NAME,
			LAST_LOGIN,
			IP,
			STATUS,
			BZ,
			SKIN,
			EMAIL,
			SNUMBER,
			PHONE
		from 
			sys_user
		where 
			USER_ID = #{USER_ID}
	</select>
		
	<!-- 通过邮箱获取数据 -->
	<select id="findByUE" parameterType="pd" resultType="pd" useCache="false">
		select 
			USER_ID,
			USERNAME,
			PASSWORD,
			NAME,
			LAST_LOGIN,
			IP,
			STATUS,
			BZ,
			SKIN,
			EMAIL,
			SNUMBER,
			PHONE
		from 
			sys_user
		where 
			EMAIL = #{EMAIL}
		<if test="USERNAME != null and USERNAME != ''">
			and USERNAME != #{USERNAME} 
		</if>
	</select>
	
	<!-- 通过编号获取数据 -->
	<select id="findByUN" parameterType="pd" resultType="pd" useCache="false">
		select 
			USER_ID,
			USERNAME,
			PASSWORD,
			NAME,
			LAST_LOGIN,
			IP,
			STATUS,
			BZ,
			SKIN,
			EMAIL,
			SNUMBER,
			PHONE
		from 
			sys_user
		where 
			SNUMBER = #{SNUMBER}
		<if test="USERNAME != null and USERNAME != ''">
			and USERNAME != #{USERNAME} 
		</if>
	</select>
	
	<!-- 通过USERNAME获取数据 -->
	<select id="findByUId" parameterType="pd" resultType="pd" useCache="false">
		select 
			USER_ID,
			USERNAME,
			PASSWORD,
			NAME,
			LAST_LOGIN,
			IP,
			STATUS,
			BZ,
			SKIN,
			EMAIL,
			SNUMBER,
			PHONE
		from 
			sys_user
		where 
			USERNAME = #{USERNAME}
	</select>
	
	<!-- 新增用户 -->
	<insert id="saveU" parameterType="pd" flushCache="false">
		insert into sys_user (
			USER_ID,
			USERNAME,
			PASSWORD,
			NAME,
			LAST_LOGIN,
			IP,
			STATUS,
			BZ,
			SKIN,
			EMAIL,
			SNUMBER,
			PHONE
		) values (
			#{USER_ID},
			#{USERNAME},
			#{PASSWORD},
			#{NAME},
			#{LAST_LOGIN},
			#{IP},
			#{STATUS},
			#{BZ},
			#{SKIN},
			#{EMAIL},
			#{SNUMBER},
			#{PHONE}
		)
	</insert>
	<!-- 用户列表(用户组) -->
	<select id="userlistPage" parameterType="page" resultType="pd" useCache="false">
		select  u.USER_ID,
				u.USERNAME,
				u.PASSWORD,
				u.LAST_LOGIN,
				u.NAME,
				u.IP,
				u.EMAIL,
				u.SNUMBER,
				u.PHONE
		from sys_user u
		where u.USERNAME != 'admin'
		<if test="pd.DEPT_ID!=null and pd.DEPT_ID!=''"><!-- 按单位查询 -->
			and u.DEPT_ID = #{pd.DEPT_ID}
		</if>
		<if test="pd.USERNAME != null and pd.USERNAME != ''"><!-- 关键词检索 -->
			and
				(
					 u.USERNAME LIKE CONCAT(CONCAT('%', #{pd.USERNAME}),'%')
					 or 
					 u.EMAIL LIKE CONCAT(CONCAT('%', #{pd.USERNAME}),'%') 
					 or
					 u.SNUMBER LIKE CONCAT(CONCAT('%', #{pd.USERNAME}),'%')
					 or
					 u.NAME LIKE CONCAT(CONCAT('%', #{pd.USERNAME}),'%')
					 or
					 u.PHONE LIKE CONCAT(CONCAT('%', #{pd.USERNAME}),'%')
				)
		</if>
		<if test="pd.lastLoginStart!=null and pd.lastLoginStart!=''"><!-- 登录时间检索 -->
			and u.LAST_LOGIN &gt;= #{pd.lastLoginStart} 
		</if>
		<if test="pd.lastLoginEnd!=null and pd.lastLoginEnd!=''"><!-- 登录时间检索 -->
			and u.LAST_LOGIN &lt;= #{pd.lastLoginEnd} 
		</if>
		order by u.LAST_LOGIN desc
	</select>
	
	<!-- 用户列表(全部) -->
	<select id="listAllUser" parameterType="pd" resultType="pd" useCache="false">
		select  u.USER_ID,
				u.USERNAME,
				u.PASSWORD,
				u.LAST_LOGIN,
				u.NAME,
				u.IP,
				u.EMAIL,
				u.SNUMBER,
				u.PHONE
		from sys_user u
		where u.USERNAME != 'admin'
		<if test="USERNAME != null and USERNAME != ''"><!-- 关键词检索 -->
			and
				(
					 u.USERNAME LIKE CONCAT(CONCAT('%', #{USERNAME}),'%')
					 or 
					 u.EMAIL LIKE CONCAT(CONCAT('%', #{USERNAME}),'%') 
					 or
					 u.SNUMBER LIKE CONCAT(CONCAT('%', #{USERNAME}),'%')
					 or
					 u.NAME LIKE CONCAT(CONCAT('%', #{USERNAME}),'%')
					  or
					 u.PHONE LIKE CONCAT(CONCAT('%', #{USERNAME}),'%')
				)
		</if>
		<if test="lastLoginStart!=null and lastLoginStart!=''"><!-- 登录时间检索 -->
			and u.LAST_LOGIN &gt;= #{lastLoginStart} 
		</if>
		<if test="lastLoginEnd!=null and lastLoginEnd!=''"><!-- 登录时间检索 -->
			and u.LAST_LOGIN &lt;= #{lastLoginEnd} 
		</if>
		order by u.LAST_LOGIN desc
	</select>
	
	<!-- 删除用户 -->
	<delete id="deleteU" parameterType="pd" flushCache="false">
		delete from sys_user
		where 
			USER_ID = #{USER_ID}
	</delete>
	
	<!-- 批量删除用户 -->
	<delete id="deleteAllU" parameterType="String" flushCache="false">
		delete from sys_user
		where 
			USER_ID in
  			 <foreach item="item" index="index" collection="array" open="(" separator="," close=")">
                  #{item}
             </foreach>
	</delete>
	
	
	<!-- 批量删除用户和角色关系 -->
	<delete id="deleteUserRole" parameterType="String" flushCache="false">
		delete from sys_user_role
		where
		USER_ID in
		<foreach item="item" index="index" collection="array" open="("
			separator="," close=")">
			#{item}
		</foreach>
	</delete>
	
	 <!-- 修改密码 -->
    <update id="editPwd" parameterType="pd" flushCache="false">
		update  sys_user set PASSWORD= #{PASSWORD}
		where USER_ID = #{USER_ID} and USERNAME = #{USERNAME}
	</update>
	
	
	<!-- 获取NEED_GUIDE -->
	<select id="getUserInfoByUsername" parameterType="pd"
		resultType="pd" useCache="false"><!-- insert update delete (flushCache="true/false") -->
		select * from sys_user
		where 1=1

		<if test="USERNAME != null and USERNAME != ''">
			and USERNAME = #{USERNAME}
		</if>
	</select>
	<!-- 修改向导标志 -->
	<update id="updateGuide" parameterType="pd" flushCache="false">
		update
		sys_user set need_guide='0'
		where USERNAME=#{username}
	</update>
	
	
	<!-- 重置密码 -->
	<update id="resetPwd" parameterType="pd" flushCache="false">
		update
		sys_user set PASSWORD= #{PASSWORD}
		where USER_ID = #{USER_ID} 
	</update>
	
	<!-- 获取用户的当前角色 -->
	<select id="findRoleByUser" parameterType="pd" resultType="pd"
		useCache="false">
		SELECT DISTINCT * from sys_role where ROLE_ID in
		(select ROLE_ID from sys_user_role where USER_ID=#{USER_ID})
	</select>
	
	<!-- 获取用户尚未选择的角色 -->
	<select id="findNewRoleByUser" parameterType="pd" resultType="pd"
		useCache="false">
		SELECT DISTINCT * from sys_role where ROLE_ID not in
		(select ROLE_ID from sys_user_role where USER_ID=#{USER_ID})
		<if test="SERACHNAME!=null and SERACHNAME!=''">
			and
			ROLE_NAME like CONCAT(CONCAT('%', #{SERACHNAME}),'%')
		</if>
	</select>
	
	<!-- 删除角色通过用户 -->
	<delete id="deleteRoleByUser" parameterType="pd" flushCache="false">
		delete from sys_user_role
		where
		USER_ID = #{USER_ID}
	</delete>
	
	<!-- 批量添加角色通过用户 -->
	<insert id="addRoleByUser" parameterType="list" flushCache="false" useGeneratedKeys="false">
		insert into sys_user_role (
		UR_ID,
		USER_ID,
		ROLE_ID
		)
		<foreach collection="list" item="item" index="index"
			separator=" UNION ALL ">
			SELECT #{item.URID},#{item.USERID},#{item.ROLEID} FROM DUAL
		</foreach>
	</insert>
</mapper>